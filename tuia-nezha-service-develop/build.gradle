buildscript {
    repositories {
        mavenLocal()
        maven { url 'http://nexus.dui88.com:8081/nexus/content/groups/public/' }
    }
    dependencies {
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:1.2' //sonarqube
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.8.RELEASE")
    }


}

plugins{
    id 'org.sonarqube' version '2.5'
    id "io.spring.dependency-management" version "0.6.1.RELEASE"
}


//sonarqube
apply plugin: 'org.sonarqube'
sonarqube {
    properties {
        property "sonar.projectName", "nezha-engine"
        property "sonar.projectKey", "cn.com.duiba:nezha-engine"
        property "sonar.host.url", "http://sonar.dui88.com"
        property "sonar.login", "admin"
        property "sonar.password", "admin"
    }
}


// EmbeddedServletContainerFactory.class

allprojects {
    apply plugin: 'maven'
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: "jacoco"

    group = 'cn.com.duiba.nezha-engine'
    version = '1.0.66-SNAPSHOT'

}
configurations {
    //编译期排除commons模块
    //在整个构建过程中排除pkaq.tiger：share
    all*.exclude group: 'javax.servlet' ,module: 'javax.servlet-api'
    all*.exclude group: 'org.eclipse.jetty.orbit' ,module: 'javax.servlet'
    all*.exclude group: 'org.glassfish' ,module: 'javax.servlet'
    all*.exclude module: 'slf4j-log4j12'

}

//configurations.all {
//    resolutionStrategy {
//        force 'javax.servlet:javax.servlet:1.3'
//    }
//}



subprojects {

    apply plugin: "io.spring.dependency-management"
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    configurations {
        all*.exclude group: 'javax.servlet'
    }

    task allDeps(type: DependencyReportTask) {}

    configurations {
        //编译期排除commons模块
        //在整个构建过程中排除pkaq.tiger：share
        all*.exclude group: 'javax.servlet' ,module: 'javax.servlet-api'
        all*.exclude group: 'org.eclipse.jetty.orbit' ,module: 'javax.servlet'
        all*.exclude group: 'org.glassfish' ,module: 'javax.servlet'
        all*.exclude module: 'slf4j-log4j12'
        all*.exclude group: 'org.apache.hbase'
        all*.exclude group: 'com.coreos', module: 'jetcd-core'
    }
    dependencyManagement {
        resolutionStrategy {
            cacheChangingModulesFor 0, 'seconds'
            cacheDynamicVersionsFor 0, 'seconds'
        }

        dependencies {

            imports {
                mavenBom 'org.springframework.boot:spring-boot-dependencies:1.5.10.RELEASE'
                mavenBom 'cn.com.duiba.boot:spring-boot-ext-dependencies:1.2.229'
                mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Edgware.SR2'
            }


            dependency ('org.springframework.data:spring-data-mongodb:1.10.4.RELEASE'){
                exclude 'org.mongodb:mongo-java-driver'
            }

            dependency("org.mongodb:mongo-java-driver:2.14.3")


            dependency('org.apache.zookeeper:zookeeper:3.4.8') {
                exclude 'log4j:log4j'
            }
            dependency('com.github.sgroschupf:zkclient:0.1') {
                exclude 'log4j:log4j'
            }

            dependency 'com.alibaba:druid:1.0.18'

            dependency 'javax.activation:activation:1.1.1'
            dependency 'org.antlr:antlr:3.4'
            dependency 'aopalliance:aopalliance:1.0'
            dependency 'bsh:bsh:2.0b1'
            dependency 'cglib:cglib:2.2.2'
            dependency('com.101tec:zkclient:0.5') {
                exclude 'org.slf4j:slf4j-api'
                exclude 'org.slf4j:slf4j-log4j12'
            }

            dependency 'commons-beanutils:commons-beanutils:1.8.3'
            dependency 'commons-cli:commons-cli:1.2'
            dependency 'commons-codec:commons-codec:1.6'
            dependency 'commons-collections:commons-collections:3.2'
            dependency 'commons-dbcp:commons-dbcp:1.4'
            dependency 'commons-io:commons-io:2.4'
            dependency 'commons-lang:commons-lang:2.6'
            dependency 'commons-pool:commons-pool:1.6'
            dependency 'commons-logging:commons-logging:1.1.2'
            dependency 'org.apache.commons:commons-collections4:4.1'
            dependency 'org.apache.commons:commons-lang3:3.4'

            dependency 'mysql:mysql-connector-java:5.1.9'
            dependency 'org.opensymphony.quartz:quartz:1.6.1'
            dependency 'joda-time:joda-time:2.9.3'
            dependency 'com.googlecode.xmemcached:xmemcached:1.4.3'
            dependency 'c3p0:c3p0:0.9.1.2'

            dependency 'javax.servlet:javax.servlet-api:3.1.0'
            dependency 'org.aspectj:aspectjrt:1.8.9'
            dependency 'org.aspectj:aspectjweaver:1.8.9'

            dependency 'org.mybatis:mybatis:3.4.1'
            dependency 'org.mybatis:mybatis-spring:1.3.0'


            dependency 'com.google.guava:guava:25.0-jre'
            dependency 'com.baidu.disconf:disconf-client:2.6.33'
            dependency 'javax.validation:validation-api:1.1.0.Final'
            dependency 'org.javassist:javassist:3.20.0-GA'
            dependency 'asm:asm-all:3.3.1'

            dependency 'org.apache.commons:commons-dbcp2:2.1.1'

            dependency 'javax.validation:validation-api:1.1.0.Final'

            dependencySet(group: 'org.jboss.resteasy', version: '3.0.7.Final') {
                entry 'resteasy-jaxrs'
                entry 'resteasy-client'
                entry 'resteasy-jackson-provider'
                entry 'resteasy-netty'
            }

            dependency 'org.jboss.logging:jboss-logging:3.3.0.Final'


            //业务依赖
            dependency('cn.com.duiba:dcommons-base:0.3') {
                exclude 'com.alibaba:dubbo'
            }

//            dependency 'cn.com.duiba.tuia:tuia-client:0.1.16-5-SNAPSHOT'
            dependency 'cn.com.duiba.idmaker-service:idmaker-service-api:1.1.10-SNAPSHOT'
            dependency('cn.com.duiba.goods-center:goods-center-api:1.4.4-SNAPSHOT') { exclude 'redis.clients:jedis' }
            dependency 'org.json:json:20160212'
            dependency 'cn.com.duiba.idmaker-service:idmaker-service-api:1.1.10-SNAPSHOT'

            dependency 'org.scala-lang:scala-library:2.10.4'

            dependency 'cn.com.duiba.nezha-alg:alg-model:1.4.4-SNAPSHOT'
            dependency 'cn.com.duiba.nezha-alg:alg-alg:1.4.4-SNAPSHOT'


            dependency ('org.apache.spark:spark-mllib_2.10:1.6.0'){
                exclude   group: 'javax.servlet' ,module: 'javax.servlet-api'
                exclude   group: 'org.eclipse.jetty.orbit' ,module: 'javax.servlet'
                exclude   group: 'org.glassfish' ,module: 'javax.servlet'
            }


            dependencySet(group: 'cn.com.duiba.nezha-compute', version: '1.27.+') {
                entry 'nezha-compute-api'
                entry 'nezha-compute-common'
                entry 'nezha-compute-alg'
                entry 'nezha-compute-mllib'
            }

            // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient

            dependency("org.mockito:mockito-core:1.10.19")
            dependency("org.powermock:powermock-api-mockito:1.7.1")
            dependency("org.powermock:powermock-module-junit4:1.7.1")

            // https://mvnrepository.com/artifact/org.apache.hbase/hbase-client
//            dependency group: 'org.apache.hbase', name: 'hbase-client', version: '1.3.1'
            dependency(group: 'com.aliyun.hbase', name: 'alihbase-client', version: '1.1.2'){
                exclude "com.google.guava:guava"
            }

            dependency ("com.dianping.cat:cat-client:1.4.0.db")

            dependencySet(group: 'cn.com.duiba.nezha-compute-online', version: '1.0.+') {
                entry 'compute-alg'
                entry 'compute-feature'
                entry 'compute-core'
            }
        }
    }

    repositories {
        mavenLocal()
        maven { url "http://nexus.dui88.com:8081/nexus/content/groups/public/" }
//        maven { url 'https://repository.cloudera.com/content/repositories/releases/'}
//        maven { url "http://repo.maven.apache.org/maven2" }
//        mavenCentral()
    }


    uploadArchives {
        repositories {
            mavenDeployer {
                snapshotRepository(url: "http://nexus.dui88.com:8081/nexus/content/repositories/snapshots/") {
                    authentication(userName: "admin", password: "admin123")
                }
                repository(url: "http://nexus.dui88.com:8081/nexus/content/repositories/releases/") {
                    authentication(userName: "admin", password: "admin123")
                }
                pom.project {
                    name project.name
                    packaging 'jar'
                    description 'notify client'
                    url 'www.duiba.com.cn'

                    scm {
                        url ''
                        connection ''
                        developerConnection ''
                    }

                    licenses {
                        license {
                            name 'No License'
                            url 'http://www.duiba.com.cn'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'xuhengfei'
                            name 'Hengfei Xu'
                        }
                    }
                }
            }
        }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives sourcesJar
    }

    task listJars(description: 'Display all compile jars.') << {
        configurations.compile.each { File file -> println file.name }
    }
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
}




